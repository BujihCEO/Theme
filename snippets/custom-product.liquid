<div class="PickersTitle">Modelo:</div>
<div class="ProductModelBox"></div>
<div class="PickersTitle">
  Tamanho:
  <div class="SizeShowTable"></div
</div>
<div class="ProductSizeBox"></div>
<div style="overflow: hidden; margin: 0px;">
  <div class="SizeInfoBox">
    <div class="SizeWidthBox">Largura:</div>
    <div class="SizeHeightBox">Comprimento:</div>
  </div>
</div>
<div class="PickersTitle">Cor:</div>
<div class="ProductColorsBox"></div>
{% if product.title contains 'Moments' %}
  {% render 'Moments' %}
{% endif%}
{% if product.title contains 'Sometimes' %}
  {% render 'Sometimes' %}
{% endif%}
{% if product.title contains 'Bootleg' %}
  {% render 'Bootleg' %}
{% endif%}
{% if product.title contains 'Illusion' %}
  {% render 'illusion' %}
{% endif%}

<style>
.PickersTitle {
    width: 100%;
    text-align: left;
    margin: 0px;
    line-height: 1;
    font-size: 2.5rem;
    color: black;
}

.ProductModelBox, .ProductSizeBox {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    margin: 0.4rem 0;
    padding: 0.4rem 0;
    flex-wrap: wrap;
}

.ModelPicker, .SizePicker {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 3.2rem;
    font-size: 2.4rem;
    background-color: #fff;
    font-weight: 600;
    color: #000;
    border: 2px solid black;
    border-radius: 1rem;
    padding: 0 1rem;
    margin: 0.4rem;
    transition: .5s;
    cursor: pointer;
}

.ModelPicker.selected, .SizePicker.selected {
    height: 3.7rem;
    background-color: black;
    color: white;
}

.SizeInfoBox {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: fit-content;
    background-color: black;
    color: white;
    padding: 0.4rem;
    margin: 0 0 0.8rem;
    border-radius: 1rem;
    transform: translateY(0%);
    transition: .2s;
}

.SizeInfoBox >* {
    display: flex;
    margin: 0.4rem;
    font-size: 1.5rem;
}

.SizeShowTable {
    display: none;
    width: max-content;
    font-size: 15px;
    border: 1px solid;
    padding: 5px 10px;
    border-radius: 2em;
    margin-left: 10px;
}
  
.SizeWidth, .SizeHeight {
    margin: 0 0 0 0.5rem;
}

.ProductColorsBox {
    position: relative;
    display: flex;
    align-items: center;
    height: 6rem;
    width: 100%;
    margin: 0.8rem 0;
    overflow-x: auto;
}

.ColorPicker {
    height: 90%;
    aspect-ratio: 1/1;
    border: 2px solid black;
    border-radius: 50%;
    transition: .5s;
    margin: 0 0.5rem;
    cursor: pointer;
}

.ColorPicker.selected {
    height: 100%;
    border: 2px solid red;
}
</style>

<script>
const LinkProduct = 'https://bujih.com/cdn/shop/t/2/assets/';
const ProductModelBox = document.querySelector('.ProductModelBox');
const ModelPickers = [
    'Masculino',
    'Feminino',
];
var ProductModel = ModelPickers[0];
ModelPickers.forEach((Model, index) => {
    var div = document.createElement('div');
    div.className = 'ModelPicker ';
    if (index === 0) {
        div.classList.add('selected');
    }
    div.innerText = Model;
    div.setAttribute('model', Model);
    ProductModelBox.appendChild(div);
});
const ModelPickerAll = document.querySelectorAll('.ModelPicker');
ModelPickerAll.forEach((button) => {
    button.addEventListener('click', () => {
        ModelPickerAll.forEach((button) => {
            button.classList.remove('selected');
        });
        SizePickerAll.forEach((button) => {
            button.classList.remove('selected');
        });
        SizePickerAll[0].classList.add('selected');
        ProductSize = SizePickerAll[0].getAttribute('size');
        button.classList.add('selected');
        ProductModel = button.getAttribute('model');
        SizeInfo();
        if (ProductModel === 'Feminino') {
            SizePickerAll[4].style.display = 'none';
        } else {
            SizePickerAll[4].style.display = '';
        }
        Tshirt.style.backgroundImage = 'url('+LinkProduct+ProductModel+'-'+ProductColor+'.png)';
        InputPreview.setAttribute('name', `properties[Preview Model:${ProductModel}/Color:${ProductColor}/Size:${ProductSize}]`);
    });
});

const ProductColorsBox = document.querySelector('.ProductColorsBox');
const ColorPickers = [
    'Preto',
    'Branco',
];
var ProductColor = ColorPickers[0];
ColorPickers.forEach((Color, index) => {
    var div = document.createElement('div');
    div.className = 'ColorPicker ';
    if (index === 0) {
        div.classList.add('selected');
    }
    div.setAttribute('color', Color)
    ProductColorsBox.appendChild(div);
});
const ColorPickerAll = document.querySelectorAll('.ColorPicker');
ColorPickerAll[0].style.backgroundColor = 'black';
ColorPickerAll[1].style.backgroundColor = 'white';
ColorPickerAll.forEach((button) => {
    button.addEventListener('click', () => {
        ColorPickerAll.forEach((button) => {
            button.classList.remove('selected');
        });
        button.classList.add('selected');
        ProductColor = button.getAttribute('color');
        Tshirt.style.backgroundImage = 'url('+LinkProduct+ProductModel+'-'+ProductColor+'.png)';
        InputPreview.setAttribute('name', `properties[Preview Model:${ProductModel}/Color:${ProductColor}/Size:${ProductSize}]`);
    });
});

const ProductSizeBox = document.querySelector('.ProductSizeBox');
const SizePickers = [
    'P',
    'M',
    'G',
    'GG',
    'XGG',
];
var ProductSize = SizePickers[0];
SizePickers.forEach((Size, index) => {
    var div = document.createElement('div');
    div.className = 'SizePicker ';
    if (index === 0) {
        div.classList.add('selected');
    }
    div.innerText = Size;
    div.setAttribute('size', Size);
    ProductSizeBox.appendChild(div);
});

var SizeInfoBox = document.querySelector('.SizeInfoBox');
var SizeWidth = document.createElement('div');
SizeWidth.className = 'SizeWidth';
var SizeHeight = document.createElement('div');
SizeHeight.className = 'SizeHeight';
document.querySelector('.SizeWidthBox').appendChild(SizeWidth);
document.querySelector('.SizeHeightBox').appendChild(SizeHeight);

function SizeInfo() {
  const sizeMap = {
    'Masculino': {
      'P': { width: '50', height: '70' },
      'M': { width: '52', height: '72' },
      'G': { width: '54', height: '74' },
      'GG': { width: '57', height: '77' },
      'XGG': { width: '60', height: '80' }
    },
    'Feminino': {
      'P': { width: '40', height: '66' },
      'M': { width: '42', height: '67' },
      'G': { width: '44', height: '69' },
      'GG': { width: '46', height: '70' }
    }
  };

  if (ProductModel && ProductSize) {
    const dimensions = sizeMap[ProductModel]?.[ProductSize];
    SizeInfoBox.style.transform = 'translateY(-110%)';
    setTimeout(() => {
      if (dimensions) {
        SizeWidth.innerText = dimensions.width + 'cm';
        SizeHeight.innerText = dimensions.height + 'cm';
      }
      SizeInfoBox.style.transform = 'translateY(0%)';
    }, 200);
  }
}

SizeInfo();

const SizePickerAll = document.querySelectorAll('.SizePicker');
SizePickerAll.forEach((button) => {
    button.addEventListener('click', () => {
        SizePickerAll.forEach((button) => {
            button.classList.remove('selected');
        });
        button.classList.add('selected');
        ProductSize = button.getAttribute('size');
        SizeInfo();
        InputPreview.setAttribute('name', `properties[Preview Model:${ProductModel}/Color:${ProductColor}/Size:${ProductSize}]`);
    });
});

Tshirt.style.backgroundImage = 'url('+LinkProduct+ProductModel+'-'+ProductColor+'.png)';
InputPreview.setAttribute('name', `properties[Preview Model:${ProductModel}/Color:${ProductColor}/Size:${ProductSize}]`);
</script>